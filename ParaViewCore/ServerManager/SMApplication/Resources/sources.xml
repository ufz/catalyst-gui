<ServerManagerConfiguration><ProxyGroup name="sources"><SourceProxy class="vtkGlyphSource2D" label="2D Glyph" name="GlyphSource2D">
      <Documentation long_help="Create a 2D glyph (e.g., arrow, cross, dash, etc.)" short_help="Create a 2D glyph">The 2D Glyph source is used
                     for generating a family of 2D glyphs, each of which lies
                     in the x-y plane. The output of the 2D Glyph source is
                     polygonal data.</Documentation>
      <IntVectorProperty command="SetGlyphType" default_values="9" name="GlyphType" number_of_elements="1">
        <EnumerationDomain name="enum">
          <Entry text="Vertex" value="1" />
          <Entry text="Dash" value="2" />
          <Entry text="Cross" value="3" />
          <Entry text="ThickCross" value="4" />
          <Entry text="Triangle" value="5" />
          <Entry text="Square" value="6" />
          <Entry text="Circle" value="7" />
          <Entry text="Diamond" value="8" />
          <Entry text="Arrow" value="9" />
          <Entry text="ThickArrow" value="10" />
          <Entry text="HookedArrow" value="11" />
          <Entry text="EdgeArrow" value="12" />
        </EnumerationDomain>
        <Documentation>This property specifies the type of the 2D
        glyph.</Documentation>
      </IntVectorProperty>
      <IntVectorProperty command="SetFilled" default_values="0" name="Filled" number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If the value of this property is 1, the 2D glyph will be
        a filled polygon; otherwise, only the edges (line segments) will be
        included in the output. This only applies to closed 2D
        glyphs.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetCenter" default_values="0.0 0.0 0.0" name="Center" number_of_elements="3">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the x, y, z coordinates of the origin of the 2D
        glyph.</Documentation>
      </DoubleVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkPVArrowSource" label="Arrow" name="ArrowSource">
      <Documentation long_help="3D arrow with a long cylindrical shaft and a cone for the tip" short_help="Create a 3D arrow">The Arrow source appends a
                     cylinder to a cone to form a 3D arrow. The length of the
                     whole arrow is 1.0 unit. The output of the Arrow source is
                     polygonal data. This polygonal data will not contain
                     normals, so rendering of the arrow will be performed using
                     flat shading. The appearance of the arrow can be improved
                     without significantly increasing the resolution of the tip
                     and shaft by generating normals. (Use Normals Generation
                     filter).</Documentation>
      <IntVectorProperty command="SetTipResolution" default_values="6" name="TipResolution" number_of_elements="1" panel_visibility="advanced">
        <IntRangeDomain max="128" min="1" name="range" />
        <Documentation>This property specifies the number of faces in the
        representation of the tip of the arrow (the cone). As the resolution
        increases, the cone will become smoother.</Documentation>
      </IntVectorProperty>
      
      <DoubleVectorProperty command="SetTipRadius" default_values="0.1" name="TipRadius" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain max="10" min="0" name="range" />
        <Documentation>This property specifies the radius of the widest part of
        the tip of the arrow (the cone).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetTipLength" default_values="0.35" name="TipLength" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain max="1" min="0" name="range" />
        <Documentation>This property specifies the length of the
        tip.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetShaftResolution" default_values="6" name="ShaftResolution" number_of_elements="1" panel_visibility="advanced">
        <IntRangeDomain max="128" min="0" name="range" />
        <Documentation>This property specifies the number of faces of the shaft
        of the arrow (the cylinder). As the resolution increases, the cylinder
        will become smoother.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty command="SetShaftRadius" default_values="0.03" name="ShaftRadius" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain max="5" min="0" name="range" />
        <Documentation>This property specifies the radius of the shaft of the
        arrow (the cylinder).</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetInvert" default_values="0" name="Invert" number_of_elements="1" panel_visibility="default">
        <BooleanDomain name="bool" />
        <Documentation>Inverts the arrow direction.</Documentation>
      </IntVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkCubeSource" label="Box" name="CubeSource">
      <Documentation long_help="Create a box with specified X, Y, and Z lengths." short_help="3D box with specified X, Y, and Z lengths">The
                     Box source can be used to add a box to the 3D scene. The
                     output of the Box source is polygonal data containing both
                     normals and texture coordinates.</Documentation>
      <DoubleVectorProperty animateable="1" command="SetXLength" default_values="1.0" name="XLength" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the length of the box in the X
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetYLength" default_values="1.0" name="YLength" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the length of the box in the Y
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetZLength" default_values="1.0" name="ZLength" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the length of the box in the Z
        direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetCenter" default_values="0.0 0.0 0.0" name="Center" number_of_elements="3" panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the center of the
        box.</Documentation>
      </DoubleVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkConeSource" label="Cone" name="ConeSource">
      <Documentation long_help="Create a 3D cone of a given radius and height." short_help="3D cone of a given radius and height">The Cone
                     source can be used to add a polygonal cone to the 3D
                     scene. The output of the Cone source is polygonal
                     data.</Documentation>
      <IntVectorProperty animateable="1" command="SetResolution" default_values="6" name="Resolution" number_of_elements="1" panel_visibility="default">
        <IntRangeDomain max="512" min="0" name="range" />
        <Documentation>This property indicates the number of divisions around
        the cone. The higher this number, the closer the polygonal
        approximation will come to representing a cone, and the more polygons
        it will contain.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetRadius" default_values="0.5" name="Radius" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the radius of the base of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetHeight" default_values="1.0" name="Height" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the height of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetCenter" default_values="0.0 0.0 0.0" name="Center" number_of_elements="3" panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the center of the
        cone.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetDirection" default_values="1.0 0.0 0.0" name="Direction" number_of_elements="3" panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>Set the orientation vector of the cone. The vector does
        not have to be normalized. The cone will point in the direction
        specified.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty animateable="1" command="SetCapping" default_values="1" name="Capping" number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the base of the cone will
        be capped with a filled polygon. Otherwise, the base of the cone will
        be open.</Documentation>
      </IntVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkCylinderSource" label="Cylinder" name="CylinderSource">
      <Documentation long_help="Create a 3D cylinder of a given radius and height." short_help="3D cylinder of a given radius and height">The
                     Cylinder source can be used to add a polygonal cylinder to
                     the 3D scene. The output of the Cylinder source is
                     polygonal data containing both normals and texture
                     coordinates.</Documentation>
      <IntVectorProperty command="SetResolution" default_values="6" name="Resolution" number_of_elements="1" panel_visibility="default">
        <IntRangeDomain max="512" min="2" name="range" />
        <Documentation>This property indicates the number of divisions around
        the cylinder. The higher this number, the closer the polygonal
        approximation will come to representing a cylinder, and the more
        polygons it will contain.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetHeight" default_values="1.0" name="Height" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the height of the cylinder
        (along the y axis).</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty command="SetRadius" default_values="0.5" name="Radius" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the radius of the
        cylinder.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetCenter" default_values="0.0 0.0 0.0" name="Center" number_of_elements="3" panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the coordinate value at the
        center of the cylinder.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetCapping" default_values="1" name="Capping" number_of_elements="1">
        <BooleanDomain name="bool" />
        <Documentation>If this property is set to 1, the ends of the cylinder
        will each be capped with a closed polygon. Otherwise, the ends of the
        cylinder will be open.</Documentation>
      </IntVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkLineSource" label="Line" name="LineSource">
      <Documentation long_help="This source creates a line between two points. The resolution indicates how many segments are in the line." short_help="Create a line between two points">The Line
                     source can be used to interactively (using a 3D widget) or
                     manually (using the entries on the user interface) add a
                     line to the 3D scene. The output of the Line source is
                     polygonal data.</Documentation>
      <DoubleVectorProperty animateable="1" command="SetPoint1" default_values="-0.5 0.0 0.0" name="Point1" number_of_elements="3" panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the first
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetPoint2" default_values="0.5 0.0 0.0" name="Point2" number_of_elements="3" panel_visibility="never">
        <DoubleRangeDomain name="range" />
        <Documentation>This property controls the coordinates of the second
        endpoint of the line.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetResolution" default_values="6" name="Resolution" number_of_elements="1" panel_visibility="never">
        <IntRangeDomain min="1" name="range" />
        <Documentation>This property specifies the number of pieces into which
        to divide the line.</Documentation>
      </IntVectorProperty>
      <Hints>
        <PropertyGroup label="Line" type="LineSource">
          <Property function="Point1WorldPosition" name="Point1" />
          <Property function="Point2WorldPosition" name="Point2" />
          <Property function="Resolution" name="Resolution" />
        </PropertyGroup>
      </Hints>
      
    </SourceProxy>
    
    <SourceProxy class="vtkSphereSource" label="Sphere" name="SphereSource">
      <Documentation long_help="Create a 3D sphere given a center and radius." short_help="Create a 3D sphere">The Sphere source can be
                     used to add a polygonal sphere to the 3D scene. The output
                     of the Sphere source is polygonal data with point normals
                     defined.</Documentation>
      <DoubleVectorProperty animateable="1" command="SetCenter" default_values="0.0 0.0 0.0" name="Center" number_of_elements="3" panel_visibility="default">
        <DoubleRangeDomain name="range" />
        <Documentation>This property specifies the 3D coordinates for the
        center of the sphere.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetRadius" default_values="0.5" name="Radius" number_of_elements="1" panel_visibility="default">
        <DoubleRangeDomain min="0" name="range" />
        <Documentation>This property specifies the radius of the
        sphere.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetThetaResolution" default_values="8" name="ThetaResolution" number_of_elements="1" panel_visibility="default">
        <IntRangeDomain min="3" name="range" />
        <Documentation>The value of this property represents the number of
        divisions between Start Theta and End Theta around the sphere. (See the
        Start Theta and End Theta properties.) The theta divisions are similar
        to longitude lines on the earth. The higher the resolution, the closer
        the approximation will come to a sphere, and the more polygons there
        will be.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetStartTheta" default_values="0" name="StartTheta" number_of_elements="1" panel_visibility="advanced">
        <DoubleRangeDomain max="360" min="0" name="range" />
        <Documentation>To form a complete sphere, the value of this property
        should be 0 degrees, and the value of the End Theta property should be
        360 degrees. The value of this property can be adjusted to form only a
        portion of a sphere.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetEndTheta" default_values="360" name="EndTheta" number_of_elements="1" panel_visibility="advanced">
        <DoubleRangeDomain max="360" min="0" name="range" />
        <Documentation>The value of this property can be adjusted to form only
        a portion of a sphere. This value is measured in
        degrees.</Documentation>
      </DoubleVectorProperty>
      <IntVectorProperty command="SetPhiResolution" default_values="8" name="PhiResolution" number_of_elements="1" panel_visibility="default">
        <IntRangeDomain min="3" name="range" />
        <Documentation>The value of this property represents the number of
        divisions between Start Phi and End Phi on the sphere. (See the Start
        Phi and End Phi properties.) The phi divisions are similar to latitude
        lines on the earth.</Documentation>
      </IntVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetStartPhi" default_values="0" name="StartPhi" number_of_elements="1" panel_visibility="advanced">
        <DoubleRangeDomain max="180" min="0" name="range" />
        <Documentation>To form a complete sphere, the value of this property
        should be 0 degrees, and the value of the End Phi property should be
        180 degrees. The value of this property can be adjusted to form only a
        portion of a sphere. Set the starting angle (in degrees) in the
        latitudinal direction.</Documentation>
      </DoubleVectorProperty>
      <DoubleVectorProperty animateable="1" command="SetEndPhi" default_values="180" name="EndPhi" number_of_elements="1" panel_visibility="advanced">
        <DoubleRangeDomain max="180" min="0" name="range" />
        <Documentation>The value of this property can be adjusted to form only
        a portion of a sphere. The value is measured in
        degrees.</Documentation>
      </DoubleVectorProperty>
      
    </SourceProxy>
    
    <SourceProxy class="vtkTrivialProducer" name="TrivialProducer">
    </SourceProxy>
    
    <SourceProxy class="vtkPVTrivialProducer" name="PVTrivialProducer">
      <IntVectorProperty command="SetWholeExtent" default_values="0 -1 0 -1 0 -1" name="WholeExtent" number_of_elements="6" panel_visibility="never">
        <Documentation>The values of this property specify the whole extent of
        the topologically regular grid.</Documentation>
      </IntVectorProperty>
    </SourceProxy>
    
    </ProxyGroup></ServerManagerConfiguration>